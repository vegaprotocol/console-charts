@import "../../styles/colors";

.annotation {
  background-color: black;
  border-color: grey;
  border-style: solid;
  border-width: 2px;
  color: white;
  display: inline-flex;
  flex-direction: row;
  align-items: stretch;
  font-size: 14px;
  cursor: default;
  user-select: none;
}

.cell {
  border-right-style: solid;
  border-right-width: 2px;
  padding: 0 4px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  position: relative;
}

.annotation.intent-primary {
  border-color: #137cbd;
}

.annotation.intent-primary > .cell {
  border-color: #137cbd;
}

.annotation.intent-primary > .cell.fill {
  background-color: #137cbd;
  color: black;
}

.annotation.intent-success {
  border-color: $vega-green3;
}

.annotation.intent-success > .cell {
  border-color: $vega-green3;
}

.annotation.intent-success > .cell.fill {
  background-color: $vega-green3;
  color: black;
}

.annotation.intent-success > .cell.stroke {
  color: $vega-green3;
}

.annotation.intent-warning {
  border-color: #d9822b;
}

.annotation.intent-warning > .cell {
  border-color: #d9822b;
}

.annotation.intent-danger {
  border-color: $vega-red3;
}

.annotation.intent-danger > .cell {
  border-color: $vega-red3;
}

.annotation.intent-danger > .cell.fill {
  background-color: $vega-red3;
  color: black;
}

.annotation.intent-danger > .cell.stroke {
  color: $vega-red3;
}

.cell > button {
  background: none;
  border: none;
  padding: 0 4px;
  cursor: pointer;
}

.cell > button.action {
  color: white;
}

.cell:last-child {
  border-right: none;
}

.spinner-head {
  stroke: #8a9ba8;
  stroke-linecap: round;
  transform-origin: center;
  transition: stroke-dashoffset 0.2s cubic-bezier(0.4, 1, 0.75, 0.9);
}

.spinner-track {
  stroke: rgba(16, 22, 26, 0.5);
}

.spinner-animation {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  animation: spinner-animation 0.5s linear infinite;

  .no-spin > & {
    animation: none;
  }
}

@keyframes spinner-animation {
  from {
    transform: translate(-50%, -50%) rotate(0deg);
  }
  to {
    transform: translate(-50%, -50% )rotate(360deg);
  }
}
